on:
  pull_request:
    paths-ignore:
      - ".github/**"

name: Test and build development versions

jobs:
  test-build-app:
    name: Build APK and IPA
    runs-on: macos-latest
    environment: dev
    needs:
      - analyze-test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true
          cache-key: deps-${{ hashFiles('pubspec.lock') }} # optional, change this to force refresh cache
          cache-path: ${{ runner.tool_cache }}/flutter # optional, change this to specify the cache path

      - name: Setup Android environment
        env:
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: echo "$GOOGLE_SERVICES_JSON" > app/google-services.json
        working-directory: android

      - name: Setup iOS environment
        env:
          GOOGLE_SERVICES_PLIST: ${{ secrets.GOOGLE_SERVICES_PLIST }}
          CERTIFICATE_BASE64: ${{ secrets.CERTIFICATE_BASE64 }}
          PROVISION_PROFILE_BASE64: ${{ secrets.PROVISION_PROFILE_BASE64 }}
          SHAREEXT_PROVISION_PROFILE_BASE64: ${{ secrets.SHAREEXT_PROVISION_PROFILE_BASE64 }}
        run: |
          echo -n "$GOOGLE_SERVICES_PLIST" > Runner/GoogleService-Info.plist
          echo -n "$CERTIFICATE_BASE64" | base64 --decode --output cert.p12
          echo -n "$PROVISION_PROFILE_BASE64" | base64 --decode --output buildpp.mobileprovision
          echo -n "$SHAREEXT_PROVISION_PROFILE_BASE64" | base64 --decode --output shareextpp.mobileprovision
        working-directory: ios

      - name: Setup Fastlane
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "ruby"
          bundler-cache: true
          working-directory: android

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "11"

      - name: Run prebuild
        run: bash prebuild.sh

      - name: Analyze
        run: |
          flutter analyze --no-fatal-warnings --no-fatal-infos

      - name: Test
        run: |
          flutter test --reporter json > test-results-general.json
          flutter test data --reporter json > test-results-data.json
          flutter test domain --reporter json > test-results-domain.json

      - name: Upload test reports
        uses: dorny/test-reporter@v1
        if: success() || failure() # run this step even if previous step failed
        with:
          name: Flutter Tests Results
          path: "test-results-*.json"
          reporter: "flutter-json"
          # only-summary: "true"

      - name: Build app
        env:
          CAPTCHA_TOKEN: ${{ secrets.CAPTCHA_TOKEN }}
          SAAS_AVAILABLE: "true"
          CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}
        run: |
          cd android && bundle exec fastlane dev &
          cd ../ios && bundle exec fastlane dev &

      - name: Upload app
        uses: actions/upload-artifact@v3
        with:
          name: linshare-dev-pr-${{ github.event.pull_request.number }}
          path: |
            "build/app/outputs/flutter-apk/app-release.apk"
            "ios/LinShare.ipa"
